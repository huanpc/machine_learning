<message>
<date> mon, 5 aug 2002 15:04:13 -0400 (edt) </date>
<from> edu </from>
<to> edu </to>
<subject>
<text_normal> 

^ re : &name &name 
</text_normal>
</subject>
<content-type> text/plain; charset=us-ascii </content-type>
<message_body>
<text_normal> 

^ hi &name , 
^ i am not sure what you mean , but i think you are saying that for aggregate operators , timestamps need to be kept around for each &name . 
^ but i think that 's only because there is &num state for each &name , so even if we do n't have &name we will still have more than &num state . 
^ so i 'm not sure how throwing away this system will help . 
^ &name 
^ on mon , &num &name &num , &name &name wrote : 
</text_normal>
<text_embedded> 

^ thanks &name . 
^ i am wondering if the stream id matters might be quite bigger than what we think now . 
^ for example , in order to do " operator optimization ( operator reordering ) " and 'recovery " , we have to have something like backups / connection points ( history archives ) to replay the previous executions for a while . 
^ &num issue for the things is that we have to find the earliest timestamp ( of tuples that the operators are currently dependent on ) for each of the backups . 
^ if we keep using stream ids , i wonder if we may have to keep track of the earilest times for all the stream ids . 
^ if my thought is correct , i would rather throw the system away . 
^ so , i hope i am wrong &smiley 
^ thanks , 
^ &name . 
<text_embedded> 

^ hi &name , 
^ i met with &name earlier today to discuss the stream id matter that we were talking about . 
^ i think that we agreed that we could probably implement the system without stream ids , but the complexity that moving restream into the aggregate boxes ( and hence having these aggregate boxes perform &num different othogonal grouping operations ) would be large and users might have trouble thinking about queries in terms of these complex operators . 
^ it seems difficult to compare the benefits from removing stream ids with the negatives of increasing the complexity of these aggregate boxes but it seems that the negatives outweigh the positives . 
^ what do you think ? 
^ &name 
</text_embedded>

</text_embedded>
</message_body>
</message>