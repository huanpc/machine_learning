<message>
<from> com </from>
<subject>
<text_normal> 

^ re : [ autopackage ] libprefix - all the way 
</text_normal>
</subject>
<to> org </to>
<content-type> text/plain </content-type>
<date> thu, 01 may 2003 16:41:04 -0400 </date>
<message_body>
<text_normal> 

^ on &name , &num at &num : &num , &name &name wrote : 
</text_normal>
<text_embedded> 

^ on &name , &num at &num : &num , &name &name wrote : 
<text_embedded> 

^ sorry for not replying to the thread , i just subscribed and as such ca n't simply reply to it . 
^ &smiley 
</text_embedded>

^ yeah , mailing lists suck do n't they &smiley &num day i 'll figure out how to spamproof a newsgroup . ... 
<text_embedded> 

^ i 'd think it 'd be worth the effort to go all the way , and provide methods for finding any path using the library , given the same path names that autoconf projects - i.e. , a function for libdir , execdir , prefix , sharedstatedir , sysconfdir , and so on . 
^ the app authors know a lot better than we do which of those directories are important to them . 
</text_embedded>

^ well the current &name ( which actually i do n't like so much , feels over complex and too inflexible ) does this . 
^ you can set libdir , sysconfdir etc separately , or if not specified they 'll default to the 'standard " unix &num . 
^ however , i remain to be convinced as to the usefulness of this . 
^ i ca n't think of a reason you 'd want to rearrange the internal directory structure of an application . 
</text_embedded>
<text_normal> 

^ again , it 's not so much the sturcture of the app as it is the system you install on . 
^ &char / the some distros , you might have an app with binaries in /usr / bin , data in /usr / share / app , docs in /usr / &name / app , etc. 
^ in a more modern environment , or something next-ish , you 'd have it totally different - /local / &name / for bin , /local / &name / library for libs , etc. 
^ it 'd be great to allow a single binary to work in disparate setups like this - it removes the whole need for the &name , mostly , which is good , since the &name is based on &num year old archaic &name layout . 
^ &smiley 
</text_normal>
<text_embedded>

<text_embedded> 

^ i can think of &num options ( there are likely many more ) : 
^ - put in some kind of metadata file , similar to a .desktop file or pkgconfig file , that has this , and apps / libs call a library routine that takes their unique &name to find and read this file . 
</text_embedded>

^ this is how it currently works . 
</text_embedded>
<text_normal> 

^ &name , sorry for babbling then . 
^ &smiley 
</text_normal>
<text_embedded> 

^ thanks -mike 
^ &name mailing list &email the pain of war cannot exceed the woe of aftermath . 
^ - - led &name , " battle of &name " 
</text_embedded>
<text_normal> 

^ &name mailing list &email 
</text_normal>
</message_body>
</message>