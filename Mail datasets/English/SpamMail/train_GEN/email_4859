<message>
<date> mon, 22 jul 2002 17:40:14 -0400 (edt) </date>
<from> edu </from>
<to> edu </to>
<subject>
<text_normal> 

^ re : predicate questions 
</text_normal>
</subject>
<content-type> text/plain; charset=us-ascii </content-type>
<message_body>
<text_normal> 

^ actually , i think the way we planned it was that the scheduler calls the &name ( so the &name &name never needs the string ) and gets the predicate back . 
^ then , it calls the &name method of the filter box with the pre-made predicate . 
^ the &name method for the map &name works similarly ( taking the already constructed expression that the scheduler called the parser on ) . 
^ &name 
^ on mon , &num &name &num , &name &name &name wrote : 
</text_normal>
<text_embedded> 

^ &name all . 
^ the scheduler people will pass in the predicate string which is stored in the catalog . 
^ this must be stored in the box in some manner ( &name 
^ * _pred_string ) . 
^ next , this string must be parsed at some point such that a predicate is returned which can be stored in the &name , too . 
^ finally , the predicate must be evaluated with the tuple information . 
^ the steps that i think we are missing information for are : # &num . 
^ we currently are n't storing the string ( though i have added a string to &name at this point ) . 
^ # &num . 
^ is &name ( ) supposed to be doing the second step ( i.e. parsing the predicate ) ? 
^ if not , then where is this happening ? 
^ also , if not , then what is &name supposed to be doing ? 
^ the last step looks just fine &smiley 
^ - &name 
</text_embedded>
</message_body>
</message>