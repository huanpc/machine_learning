<message>
<date> thu, 1 aug 2002 19:38:11 -0400 (edt) </date>
<from> edu </from>
<to> edu </to>
<subject>
<text_normal> 

^ re : union and restream specifications 
</text_normal>
</subject>
<content-type> text/plain; charset=us-ascii </content-type>
<message_body>
<text_normal> 

^ hi &name , 
^ thanks for your email . 
^ the issues you bring up are important and we should probably be bring them up again when we meet on wednesday . 
^ anyway , here are my initial reactions . 
^ first tumble , &name , and &name do n't have their own restreams inside them - they rely on the user planting a restream before them . 
^ for instance , &name maintains &num state per &name so the user has to place a restream before it that converts the aggregate stream to a different aggregate stream where there will be a different &name for each unique set of attribute values for tumble attributes . 
^ the group-by clause in the tumble box is different than the grouping that the restream before it does 
^ - here a new set of values for the tumble group-by states will cause &num state to be emitted and closed and a new state to start . 
^ but the number of states is directly dependent on the number of unique stream ids . 
^ as far as restream on its own , it is used to make case statements . 
^ but off the top of my head , it ca n't think why we could n't just use map instead . 
^ but in answer to your question , i do n't think we need stream ids as they are now . 
^ however , even if we move restream into tumble etc. we will still be having the same problem of trying to figure out what values of the group-by attributes we have seen before and having to maintain a history list or concatenating attribute values . 
^ so we still have to solve these problems that i outlined in my document . 
^ i hope this helps , i am happy to continue this discussion &smiley 
^ &name 
^ on &name , &num &name &num , &name &name wrote : 
</text_normal>
<text_embedded> 

^ &name &name . 
^ i appreciate your comments and documents . 
^ anyhow , to me assigning stream ids does n't look easy &smiley 
^ it could be a silly question . 
^ but , now i came back to a question " why do we need stream ids ? " 
^ please let me know your opinion about this . 
^ i am not yet even conviced much by myself though &smiley 
^ for boxes filter , map , &name , &name , &name , &name , and &name , as far as i know , &name , &name , &name , &name , and &name do not care about the stream ids in the input . 
^ it means to me there is no use of placing a &name right infront of a &name . 
^ if i am correct , &name and &name have their on restreams in them . 
^ so there is no use of placing a &name in front of a slide or tumble also . 
^ so , my question # &num is that if the stream ids may not appear in the box modifiers ( like filter predicates , map functions ) , why do we need to have &name ? 
^ i wonder if having " group by " clause in tumble and slide would be sufficient and having a separate &name box outside of tumbles and slides do not have any impact . 
^ if # &num is right , i guess something equivalent to stream id is necessary only in the body of the tumble and &name and streams ids do not play any more outside tumbles and slides . 
^ besides , sometimes the identification of individual streams can be also handled by user-specified ids . 
^ actually , if we have user-specified attribute id ( e.g. student id , soldier id , etc. ) in the schema , we may have to relate it to the stream id ( which is automatically generated by the runtime system ) , which seems complex but not much useful . 
^ as you know , some boxes assign new stream ids to their outgoing tuples . 
^ however , i think whether to assume that &num tuples belong to the virtually same stream or not could be a semantic issue ( i.e. if i have a union accepting &num tuples having id &num from &num separate source streams , i may want to take them in the same group or may not . ) 
^ hmmmm. i do n't know if it 's worth while to talk about it any more ... &smiley i will await your response . 
^ thank you . 
^ have a nice day ! 
^ &name . 
</text_embedded>
</message_body>
</message>