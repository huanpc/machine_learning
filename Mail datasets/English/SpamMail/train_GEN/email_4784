<message>
<date> tue, 20 may 2003 08:37:26 +0100 (bst) </date>
<from> ac.uk </from>
<to> ac.uk </to>
<subject>
<text_normal> 

^ re : try again 
</text_normal>
</subject>
<content-type> text/plain; charset=us-ascii </content-type>
<message_body>
<text_normal> 

^ hey &name , 
^ yes - the tokeniser is totally 'dumb " to &name tags . 
^ the way i see it you have &num choices : 
^ - modify the tokeniser to ignore anything inside ( ) ( it is a relatively simple " flex " lexer ) 
^ - call the tokeniser only on the bits of text between &name tags ( the overhead of invoking the tokeniser is tiny compared to the tagger ) 
^ - replace all the tags in the section you want to tokenise with something like ~ , tokenise , and then stick the tags back in 
^ soon , 
^ &char 
^ on &num may &num , &name &name wrote : 
</text_normal>
<text_embedded> 

^ hi &name , 
^ i 've attached another script which keeps the tags in place , plus has a couple tiny improvements to the code . 
^ however , i am having troubles with the tokeniser - i ca n't get it to &name tags - it still ends sentences if it sees a period or question mark in side &char ( ) pair . 
^ any suggestions ? 
^ &name 
^ &name sat , &num at &num : &num , &name &name wrote : 
<text_embedded> 

^ thanks &name . 
^ is " &name " a standard perl library ? 
^ does it have all the parsing facilities necessary ( &name : : parser ) ? 
^ what is &name ? 
^ &name manana , 
^ &char 
<text_embedded> 

^ &name , sent you a slightly useless version . 
^ try this one . 
^ oh , and it does n't keep markup in the text yet , i 'll send you that once i finish it ( which wo n't take long at all ) . 
^ &name 
</text_embedded>

</text_embedded>

</text_embedded>
</message_body>
</message>