<message>
<date> thu, 1 aug 2002 14:10:38 -0400 (edt) </date>
<from> edu </from>
<to> edu </to>
<subject>
<text_normal> 

^ re : union and restream specifications 
</text_normal>
</subject>
<content-type> text/plain; charset=us-ascii </content-type>
<message_body>
<text_normal> 

^ on &name , &num &name &num , &name &name wrote : 
</text_normal>
<text_embedded> 

^ actually i have questions about " newsid " and " oldsid " . 
^ if we have &num restreams in a row , do you think we should have &num " oldsid 's in each of the tuples coming out of the most downstream box ? 
^ it looks expensive to me . 
</text_embedded>
<text_normal> 

^ it sounds like we are all in agreement that we do n't want to keep around oldsid . 
</text_normal>
<text_embedded> 

^ as stream ids are invisible , i do n't think they may appear in box modifiers such as filter predicates and map functions . 
^ is it correct ? 
</text_embedded>
<text_normal> 

^ yes , i think this is correct . 
</text_normal>
<text_embedded> 

^ when we have a restream which groups by &num attributes of 4-byte ints , if the values of the attributes are uniformly distributed from min_integer to max_integer , it is very obvious that we must have &num bytes to distinguish all the combination of substreams . 
^ in the same token , if you have &num int attributes to group by , i think we should have stream identifiers having at least &num bytes . 
^ i wonder if strings will make matters worse . 
^ am i correct ? 
^ if so , i guess we should come up with something like " var' int for stream ids . 
</text_embedded>
<text_normal> 

^ this is on the agenda for when the implementors meet , we came up with &num solutions to this problem that we can talk about . 
</text_normal>
<text_embedded> 

^ can we group by floats and doubles ? 
^ i hope not though . 
</text_embedded>
<text_normal> 

^ yes , one could even group by stings . 
</text_normal>
<text_embedded> 

^ given the product &char &char &char of attribute value sets &char and &char and a mapping &char : &char &char &char - ) &char ( the set of stream ids ) , do you think i should be order preserving ? 
^ i.e. , &char ( &char , &char ) ( &char ( &char , &char ) for any ( &char , &char ) and ( &char , &char ) in &char &char &char such that ( &char , &char ) ( ( &char , &char ) ? 
^ if so , it seems to me that the cardinality of stream ids shoud be equal to the product of the cardinalities of all groupby attribute value sets . 
^ if not , i think we can incrementally assign ids to streams of newly seen groupby attribute values so that the cardinality of stream ids could be much less than the product of the cardinalities of all groupby attribute value sets ( if the attributes are sparsely distributed ) . 
</text_embedded>
<text_normal> 

^ i do n't see any reason for &char to be order preserving . 
^ the problem with this solution is that the restream box will have to remember every value for the group-by attributes that it has seen . 
^ &name 
</text_normal>
<text_embedded> 

^ thanks , 
^ &name . 
<text_embedded> 

^ &num clarification . 
^ the original restream proposal did indeed add one additional attribute to the result tuple , " oldsid " . 
^ however , since &name 's should be invisible ( and since they will probably be unreadable ) , i 'm now thinking that it should n't bother adding it . 
^ &name &name &num &num &num ( phone ) assistant professor , computer science &num &num &num ( fax ) &name university , &name &num &website ) &name , ma &num 
^ on &name , &num &name &num , &name &name wrote : 
<text_embedded> 

^ hey &name , 
^ the restream box should display the input tuple schema and allow the user to select a subset of these attributes . 
^ the restream box will then add one extra field ( old stream id ) and will replace the stream id of the incoming tuples with a unique one that is dependent of the values of the group-by attributes . 
^ thus the output schema type will always be the same as the input schema type with &num extra string field ( old &name ) . 
^ yes , the union box does not need any kind of modifier . 
^ &name this helps , let me know if restream needs more explanation . 
^ &name 
^ on &name , &num &name &num , &name &name wrote : 
<text_embedded> 

^ hey guys , &name just got a few questions about the restream and union boxes . 
^ i just got a bug report that says restream should only have &num column in which the user can select which attribute to group by on . 
^ can someone explain this to me ? 
^ apparently i didnt really have a healthy understanding of restream when i designed the properties dialog . 
^ also , as far as i can tell the union box does not need any sort of predicate / modifiers &name in the properties dialog because it always performs the same operation on the incoming streams . 
^ is this a correct assumption ? 
^ thanks 
^ &name 
</text_embedded>

</text_embedded>

</text_embedded>

</text_embedded>
</message_body>
</message>