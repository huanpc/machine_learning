<message>
<subject>
<text_normal> 

^ re : [ autopackage ] libprefix - all the way 
</text_normal>
</subject>
<from> com </from>
<to> org </to>
<content-type> text/plain </content-type>
<date> 01 may 2003 22:44:52 +0100 </date>
<message_body>
<text_embedded> 

^ again , it 's not so much the sturcture of the app as it is the system you install on . 
^ &char / the some distros , you might have an app with binaries in /usr / bin , data in /usr / share / app , docs in /usr / &name / app , etc. 
^ in a more modern environment , or something next-ish , you 'd have it totally different - /local / &name / for bin , /local / &name / library for libs , etc. 
</text_embedded>
<text_normal> 

^ installing things into those locations can be abstracted by the autopackage &name certainly . 
^ i suspect that a distro which broke with the &name would n't be too concerned about compatability anyway , so rebuilding the packages with --sysconfdir etc to configure would be easy . 
^ in general , the extra effort associated with deprefixing an app to have those paths also loaded at runtime probably is n't worth it for hypothetical next style distros . 
^ lots of people talk about changing the &name , but i do n't think it 's that bad really - certainly replacing the short unix names with long english names does n't seem much like progress to me i 'm afraid . 
</text_normal>
<text_embedded> 

^ it 'd be great to allow a single binary to work in disparate setups like this - it removes the whole need for the &name , mostly , which is good , since the &name is based on &num year old archaic &name layout . 
^ &smiley 
</text_embedded>
<text_normal> 

^ &name is based on the &num year old &name , if you 're going to chuck out legacy stuff you might as well rewrite the &name , it 's got enough hairs &smiley 
^ &name mailing list &email 
</text_normal>
</message_body>
</message>