<message>
<date> sat, 22 feb 2003 17:22:19 +0000 </date>
<to> ac.uk </to>
<from> ac.uk </from>
<subject>
<text_normal> 

^ re : &name fail 
</text_normal>
</subject>
<content-type> text/plain; charset="us-ascii"; format=flowed </content-type>
<message_body>
<text_normal> 

^ the &name needs to be changed to use the &name version . 
^ the original &name class calls the &name which i think is not the distributed version . 
^ at &num : &num &num / &num / &num &num , you wrote : 
</text_normal>
<text_embedded> 

^ dear all , 
^ i 've been doing some testing of the system , and whilst it seemed to be fine on smaller numbers with a few clients running off linux2 / &num ( server on linux &num ) using &name 's factorisations.java ( lima.testing ) , i encounted some serious problems when i ran &name trying to factorise a &num &char &num ( &name &name / mathematical / factorisation / &name / &name &num &num ) . 
^ i think the problem lies with the distribution , though i cannot be sure . 
^ i shall do my best now to explain how things went . 
^ sorry it 's a bit waffley - i 'm tired ! 
^ i started the server and around &num clients ( you can only log onto &num &name machines simultaneously , otherwise i 'd have had the whole intel lab working on it ) . 
^ i then started &name as above . 
^ trial division and &name rho obviously ran very smoothly & without any problems 
^ &name &name ran and started running work units on all the clients . 
^ some completed and sent their work units back in and eliptic curve stopped processing and gave control onto &name . 
^ i 'm not quite sure whether &name did what it was meant to , because there were still a lot of clients running through their curve stuff unsubmitted . 
^ but perhaps you can figure this ? 
^ anyway , &name finished processing and released control . 
^ &name produced its factor base & did its init stuff , then started to produce qsworkunits which started to be farmed out to the clients . 
^ i was a bit concerned by the fact that it seemed to always say : 
^ &num / &num relations , &num partial relations . 
^ averages now : &char / &char ms / relation , &char / &char ms / partial relation . 
^ &char / &char polys / relation , &char / &char polys / partial relation . 
^ &char &num 
^ sending : &name ( &num ) ... 
^ suggesting that it was sending out the same work unit all the time and never getting anywhere . 
^ realising that &name had finished , &num ctrl-c 'd the clients still running &name work units and restarted them and they picked up the qsworkunits and all seemed well . 
^ i sat back for a bit , watched the news online , read a few websites , got myself some drink , watched some of the qsworkunit data scrolling up on the clients and then i noticed a number of the clients had closed . 
^ since they 'd been running in a batch file , i did n't catch the exception , but i imagine its something which is discussed below . 
^ i started them again and things were back to normal . 
^ seemed odd , but not a crisis . 
^ however , after watching for a while , i did see that a number of &name &name work units were being run again . 
^ presumably the &num &num cancelled before . 
^ some reported : 
^ &website : &num / &name ... 
^ found &name &name workunit &website.servererror : &name occurred in server thread ; nested exception is : java.lang.outofmemoryerror 
^ but after leaving them for a few minutes , i tried again and was successful ! 
^ i did notice however that it never reported sending a different number other than &num for the sending : &name and that all clients running &name 's said : 
^ a factors : &num * &num * &num * &num * &num * &num * &num * &num * &num * &num 
^ * &num * &num * &num * &num * &num 
^ &char typical output was something like : 
^ &website : &num / &name ... 
^ found &name &name workunit got work unit . 
^ processing ... 
^ a factors : &num * &num * &num * &num * &num * &num * &num * &num * &num * &num * &num 
^ * &num * &num * &num * &num * &num 
^ starting threshold value is &num min / max : &num / &num new rate &num better : &name &name rate &num better : &name &name rate &num better : &name &name rate &num better : &name &name rate &num better : &name &name rate &num better : 0.033350192)0.02781502 / home / &name / documents / new rate &num better : &name &name rate &num better : &name &name rate &num better : &name &name rate &num better : &name trial divided &num and passed &num , ratio &num time per relation 48257400micros found &num relations ... done . 
^ requesting workunit got work unit . 
^ processing ... 
^ a factors : &num * &num * &num * &num * &num * &num * &num * &num * &num * &num * &num 
^ * &num * &num * &num * &num * &num 
^ starting threshold value is &num min / max : &num / &num 
^ things seemed to be running in this state for a while , until after some time a client crashed with : 
^ requesting workunit got work unit . 
^ processing ... 
^ a factors : &num * &num * &num * &num * &num * &num * &num * &num * &num * &num * &num * &num * &num * &num * &num * &num 
^ starting threshold value is &num min / max : &num / &num new rate &num better : &name &name rate &num better : &name &name rate &num better : &name &name rate &num better : &name &name rate &num better : &name trial divided &num and passed &num , ratio &num time per relation 378832000micros found &num relations ... done . 
^ submitting workunit &website.marshalexception : error marshalling arguments ; nested exception is : &website.socketexception : &name closed 
^ other clients started to do the same . 
^ it was always on submitting a work unit and always when submitting qsworkunits , never &name &num . 
^ &char slight variation obtained was : 
^ &website.marshalexception : error marshalling arguments ; nested exception is : &website.socketexception : connection reset by peer : socket write error 
^ a few were restartable after this , but would fail again later . 
^ eventually they 'd secum to the error : 
^ &website : &num / &name ... 
^ &website.unmarshalexception : error unmarshalling return ; nested exception is : java.io.eofexception 
^ after this point they would not restart a client at all . 
^ full-stop . 
^ point &name . 
^ i 've had some which failed around &num / &num hour ago , still running the server , but those clients wo n't restart . 
^ most clients failed this way , but a few eliptic curve &num kept going ( since it only crashes when submitting a &name ) . 
^ i did try ctrl-c' ing on of these and then re-running it . 
^ this then immediately gave the &name . 
^ i guess i could now stay and see what happens once all &name work units in the &name have been processed , but my best guess is that it 'll then get qsworkunits and will then fail as above . 
^ therefore , i 'll stop it running now and attach both the server and &name logs in case they provide any clues to you for debugging . 
^ i do need some sleep now , but i may well be in the lab again later today and hopefully will see some of you then . 
^ any ideas on the above would be appreciated ! 
^ regards , 
^ &name 
^ &name &name &name college , &name &name &name &name &name : room &name , &name &name &name &name : &email &name &name : &name : # &num | &name : &email &name : &num &name &name &name &name &name &name &name &name &num 
</text_embedded>
</message_body>
</message>