<message>
<date> fri, 19 jul 2002 11:35:08 -0400 (edt) </date>
<from> edu </from>
<to> edu </to>
<subject>
<text_normal> 

^ re : c++ catalog manager 
</text_normal>
</subject>
<content-type> multipart/mixed </content-type>
<message_body>
<part num="1" type="text/plain">
<text_normal> 

^ in response to # &num - that is exactly how the parser works . 
^ it takes a string and returns the &name object . 
^ as you asked , the code is attached with this email . 
^ did you ever get around to rewriting attribute extracts in the predicate / expression string as : &num : &char : &num : &num : where the size and offsets are now compatable with the new way of looking at tuples ? 
^ &name 
^ on &name , &num &name &num , &name &name wrote : 
</text_normal>
<text_embedded> 

^ hello . 
^ at last , i finished re-writing c++ catalog-related classes and now they seem to be working fine . 
^ basically , what i did includes : 
^ &num ) in the current table schemas , as we decided to store box modfiers ( e.g. predicates for filters ) as strings in a sleepycat table ( &name ) , it looked desirable to have some classes that enable me to store variable-length strings as table columns easily . 
^ besides , as the strings in the &name were serialized using &name 's &name ( ) and &name 's &name ( ) methods , i thought it would be better to write my own datainputstream and dataoutputstream classes in c++ . 
^ now my classes are compatible with the &name classes for &name . 
^ &num ) in the previous code , the table-related classes written in c++ were quite different from those in the &name . 
^ i reorganized the c++ classes and methods so that they look very similar to the &name counterparts . 
^ &num ) i found a relatively nice automatic documentation tool for c++ called " kdoc " and added comments in all of my header files . 
^ in order to see the &name , refer to /catalogmgr / &name / index.html after unzip the attached . 
^ &num ) i wrote a class called catalogmanager whose load ( ) method reads from the sleepycat tables and returns a querynetwork object . 
^ the querynetwork object has boxes , arcs , applications , and input streams ( source streams ) as it did before . 
^ &num ) all the table files in /catalog / &num in the attached were generated using the newest &name program . 
^ in order to see , how my code reads from them , &website 
^ &num ) i subclassed filterbox from &name . 
^ when a filterbox object is being instantiated , it takes the user-specified box modifier ( string ) as a parameter . 
^ if think the modifier should be parsed into a predicate object ( a parse tree ) somehow . 
^ i made a room fomr this in the filterbox class . 
^ i think we should reach an agreement about how to combine the parser , box and scheduler as soon as possible . 
^ then i will work on that for other boxes as well . 
^ &num ) i guess it would be nice if i can see how the c++ parser is written . 
^ can i take a look at it ? 
^ your questions and comments are very welcome . 
^ thank you . 
^ &name . 
</text_embedded>
</part>
</message_body>
</message>