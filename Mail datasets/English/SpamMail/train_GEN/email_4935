<message>
<date> thu, 1 aug 2002 14:16:13 -0400 (edt) </date>
<from> edu </from>
<to> edu </to>
<subject>
<text_normal> 

^ re : union and restream specifications 
</text_normal>
</subject>
<content-type> multipart/mixed </content-type>
<message_body>
<part num="1" type="text/plain">
<text_normal> 

^ &name , i did n't see that professor &name had already replied . 
^ attached is our writeup of the &name stream id assignment issue . 
^ &name 
^ on &name , &num &name &num , &name &name wrote : 
</text_normal>
<text_embedded> 

^ on &name , &num &name &num , &name &name wrote : 
<text_embedded> 

^ actually i have questions about " newsid " and " oldsid " . 
^ if we have &num restreams in a row , do you think we should have &num " oldsid 's in each of the tuples coming out of the most downstream box ? 
^ it looks expensive to me . 
</text_embedded>

^ i think my comment below addressed this . 
^ do n't add " oldsid " to the result tuples . 
<text_embedded> 

^ as stream ids are invisible , i do n't think they may appear in box modifiers such as filter predicates and map functions . 
^ is it correct ? 
</text_embedded>

^ correct . 
<text_embedded> 

^ when we have a restream which groups by &num attributes of 4-byte ints , if the values of the attributes are uniformly distributed from min_integer to max_integer , it is very obvious that we must have &num bytes to distinguish all the combination of substreams . 
^ in the same token , if you have &num int attributes to group by , i think we should have stream identifiers having at least &num bytes . 
^ i wonder if strings will make matters worse . 
^ am i correct ? 
^ if so , i guess we should come up with something like " var' int for stream ids . 
</text_embedded>

^ this is one of the things that we want to bring up at the meeting on wed . 
^ ( i.e. , representation of stream id 's) 
<text_embedded> 

^ can we group by floats and doubles ? 
^ i hope not though . 
</text_embedded>

^ again , we can discuss on wed . 
^ i would tend to agree with you . 
<text_embedded> 

^ given the product &char &char &char of attribute value sets &char and &char and a mapping &char : &char &char &char - ) &char ( the set of stream ids ) , do you think i should be order preserving ? 
^ i.e. , &char ( &char , &char ) ( &char ( &char , &char ) for any ( &char , &char ) and ( &char , &char ) in &char &char &char such that ( &char , &char ) ( ( &char , &char ) ? 
^ if so , it seems to me that the cardinality of stream ids shoud be equal to the product of the cardinalities of all groupby attribute value sets . 
^ if not , i think we can incrementally assign ids to streams of newly seen groupby attribute values so that the cardinality of stream ids could be much less than the product of the cardinalities of all groupby attribute value sets ( if the attributes are sparsely distributed ) . 
</text_embedded>

^ the answer to your first question is no. the incremental generation of stream id 's by restream is &num proposal we 've been thinking about also , and want to discuss on wed . 
^ &name , maybe you should send &name your write-up on the stream id issue since he seems to be thinking about the same things we are . 
^ - &name 
<text_embedded> 

^ thanks , 
^ &name . 
<text_embedded> 

^ &num clarification . 
^ the original restream proposal did indeed add one additional attribute to the result tuple , " oldsid " . 
^ however , since &name 's should be invisible ( and since they will probably be unreadable ) , i 'm now thinking that it should n't bother adding it . 
^ &name &name &num &num &num ( phone ) assistant professor , computer science &num &num &num ( fax ) &name university , &name &num &website ) &name , ma &num 
^ on &name , &num &name &num , &name &name wrote : 
<text_embedded> 

^ hey &name , 
^ the restream box should display the input tuple schema and allow the user to select a subset of these attributes . 
^ the restream box will then add one extra field ( old stream id ) and will replace the stream id of the incoming tuples with a unique one that is dependent of the values of the group-by attributes . 
^ thus the output schema type will always be the same as the input schema type with &num extra string field ( old &name ) . 
^ yes , the union box does not need any kind of modifier . 
^ &name this helps , let me know if restream needs more explanation . 
^ &name 
^ on &name , &num &name &num , &name &name wrote : 
^ just which explain in the 
</text_embedded>

</text_embedded>

</text_embedded>

</text_embedded>
</part>
</message_body>
</message>